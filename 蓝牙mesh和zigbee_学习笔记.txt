zigbee ：1/网状网 路由网络 
		 2/数据传输的路径并不是预先设定的，而是传输数据前，
			通过对网络当时可利用的所有路径进行搜索，分析它们的位置关系以及远近，
			然后选择其中的一条路径进行数据传输。
		 3/具有 协调器 路由器 终端 三种节点 硬件结构完全一样，软件不同
		 4/第一个节点一定是该网络的协调器，且网络里有且仅有一个协调器.  而路由器和终端却可以有多个。

			对于协调器 路由器 终端的了解如下：

			协调器（Co-ordinator），是启动和配置网络的一种设备，是网络的中心节点，一个ZigBee网络只允许有一个ZigBee协调器

			路由器（Router），是一种支持关联的设备，能够将消息转发到其他设备

			ZigBee终端设备（End Device），执行具体功能的设备。

			Zigbee网络组建以后，网络里的节点可以进行相互通信，数据通信的方式有4种，即单播, 广播, 组播,  绑定.
			————————————————
			版权声明：本文为CSDN博主「MrT_WANG」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
			原文链接：https://blog.csdn.net/wangweijundeqq/article/details/63691804
			
蓝牙mesh：1/网状网 泛洪网

		  2/数据通过不断转发传递，一级级发送到除发送节点外的相邻节点。
		  
		  3/现在的手机不支持蓝牙MESH，因此蓝牙MESH网络需要至少一个代理节点来实现和手机的通信。
		  
		  低功耗节点(图3中黄色节点)是指低功耗设备处于睡眠状态时，
		  需要有朋友节点(图3中节点O、P)帮助存储请求数据，这样就可以保证所有信息都被收到。
		  边缘节点(图3中蓝色节点)是指没有中继功能的周围节点。
		  如果网络中中继节点太多，不停重发会导致无线频谱无法支撑，而导致整个网络瘫痪。蓝牙MESH网络通过增加边缘节点选项进行改善。
		  https://www.sekorm.com/news/41162147.html
		  
		  4/七层架构模型
			承载层（Bearer Layer）

			Bearer Layer 定义了Mesh节点怎么传递网络消息的。定义了两种Bearer，广播advertising bearer 和GATT bearer 。

			Advertising Bearer 利用的是BLE GAP广播包的advertising 和scanning
			的功能来传递接收mesh的报文。

			The GATT Bearer 允许不支持Advertising Bearer的设备间接的与mesh节点进行通讯。怎么通讯呢？使用前面讲的代理(Proxy Protocol)。Proxy Protocol是封装在GATT里面，当然会用特别定义的GATT characteristics。上一讲我们讲到了Proxy Feature，支持Proxy Feature的Proxy Node也就是代理节点，因为可以同时支持两种Bearer Layer，所以可以作为mesh节点和非mesh节点的中间桥梁。

			网络层（Network Layer）

			网络层定义了几件事情， 一个是定义了多种网络地址类型，我之前有说过关于Mesh地址的内容。二是定义了网络层的格式，打通传输层（Transport layer）和承载层(Bearer layer)；三是定义了一些输入输出Filter，决定哪些消息需要转发，处理还是拒绝。四是定义了网络消息的加密和认证。

			底层传输层（Lower Transport Layer）

			这层做的事情很简单，就是拆拆拼拼。把太长的传输层的包拆成若干个分给网络层，把短的网络层的包再组成一个长的传输层的PDU(Protocol Data Unit)。

			上层传输层（Upper Transport Layer）

			上层传输层主要是负责加密，揭秘和应用数据授权。一句话，消息的安全性和机密性就是有这一层负责的。还有就是会定义一些节点间在这一层的一些会话，比如Friend功能，心跳包（Heartbeats）。

			访问层（Access Layer）

			访问层主要负责：1.定义更高层的应用如何跟upper transport layer通讯。2.定义应用数据的格式。3.定义和控制upper transport layer应用数据的加解密。4.在把应用数据扔到上层之前，会检查校验接收过来的应用数据是否合法。

			基础Model层（Foundation Models Layer）

			基础model层定义访问层（access layer）的状态，消息，模型配置和mesh网络管理。

			Model层（Model Layer）

			Model层定义了典型的用户场景标准化操作的相关models（相关的models定义在Bluetooth Mesh Model specification文档中）。更高层次模型规范的例子包括照明和传感器的模型。
			————————————————
			版权声明：本文为CSDN博主「Jim_天河」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
			原文链接：https://blog.csdn.net/JaLLs/article/details/88865194
		  
		  
		  
		  5/蓝牙mesh中分三种model：Server、Client和Control。一个节点默认需要两个ServerModel：Configuration Server（0x0000）和HealthServer（0x0002）
		  状态提供者为server服务器：比如传感器，接收状态者为client客户端，既是状态提供者又需要接收状态并发送指令者为control控制端：比如灯的开关。
		  一个设备同时可以运行多种类型的model
		  model（模型）定义一组状态，和这些状态下操作的一组信息，model顾名思义，是一个应用的模型（架构），再由具体的app（应用）调用。
		  https://www.ednchina.com/news/2018091411187.html
		  
		  
		  
		  */问题：mesh网络的结构（配置），是在网络建立之初设置（provisioning）好的，这个之初指哪一步，例如 天猫精灵 增加新的节点，这些节点的网络
		  配置是在天猫精灵软件（支持设备）部分设置好的还是在用户主动组网时设置的。
		  记录：天猫精灵作为provisioner，负责管理周边mesh设备，检测到符合接入规范的设备后，自动组入网络并配置
				阿里定义了三元组 识别符合规范的产品 并根据它分配网络配置
		  
		  6/通过uuid连接设备后，pb-adv 连接会在组网成功后一定时间内断开，记得在连接后进行provisioning给新入网设备配置节点id，网络密钥等。
			否则需要重新建立连接，组网成功后pb-adv连接将无法建立
		  7/同过divkey，只有provisioner才可以配置device的网络配置
		